‚¨ú‚úÖ
‚úÖ   1 - Clonar Reposit√≥rios
‚úÖ      I - Base da P√°gina
‚úÖ      II - API
‚úÖ      III - Instalar API
‚úÖ   2 - Setar o Scaffold (Ajustar os arquivos)
‚úÖ   3 - Ajustar componentiza√ß√£o de CSS
‚úÖ       I - Cores
‚úÖ       II - Bot√µes
‚úÖ       III - Inputs
‚úÖ       IV - Fonts
‚úÖ       V - Espa√ßamentos
‚úÖ    2 - Gerar HTML
‚úÖ        I - login
‚úÖ        II - cadastro
‚úÖ        III - Home
‚úÖ    3 - Estilizar
‚úÖ        I - login
‚úÖ        II - cadastro
‚úÖ        III - Home
‚úÖ        IV - Modais
‚úÖ        V - Checar se est√° FIEL ao figma
‚¨ú   4 - Desenvolver Formul√°rio LOGIN
‚úÖ       I - Enquanto os dois inputs n√£o estiverem preenchidos, o bot√£o de acessar fica desabilitado
‚úÖ       II - Crie uma valida√ß√£o onde o usu√°rio N√ÉO poder√° acessar a p√°gina Home se os campos estiverem vazios
‚úÖ       III - Habilite o bot√£o que cont√©m o texto "Acessar" quando os inputs estiverem devidamente preenchidos.
‚úÖ       IV - Ao clicar no bot√£o que cont√©m o texto "Acessar" inserir um √≠cone de loading, enquanto a API n√£o retornar o token.
‚õî       V - Caso o usu√°rio n√£o exista informar que o usu√°rio n√£o foi encontrado em um toltip. (A API n√£o retorna a informa√ß√£o de usu√°rio inexistente, apenas email incorreto)
‚úÖ       VI - Criar a l√≥gica de verifica√ß√£o para o login (fetch POST)
‚¨ú       VII - Remover dados do LocalStorage ao fazer logout 
‚úÖ   5 - Desenvolver Formul√°rio CADASTRO
‚úÖ       I - Enquanto os quatro inputs do cadastro n√£o estiverem preenchidos, o bot√£o que cont√©m o texto "Cadastrar" deve ficar desabilitado
‚úÖ       II - Ao clicar no bot√£o que cont√©m o texto "Cadastrar" inserir um √≠cone de loading, enquanto a API n√£o retornar uma resposta
‚úÖ       III - Criar a l√≥gica de verifica√ß√£o para o cadastro (fetch POST)
‚úÖ       IV - Redirecionar para Login quando cadastro for bem executado
‚úÖ   6 - Desenvolver l√≥gica da p√°gina Home
‚úÖ       I - Renderizar todos os posts contidos na API
‚úÖ       II - Exibir no m√°ximo 145 caracteres no conte√∫do post
‚úÖ       III - Passar todos os dados via data-attribute para abrir o modal dinamicamente com os post completo
‚úÖ       IV - Converter data de publica√ß√£o para o formato proposto no layout do Figma (uSAR M√âTODO DA CLASSE DATE)
‚úÖ       V - Adicionar bot√£o de editar e remover APENAS caso o post seja do usu√°rio logado
‚úÖ       VI - Bot√£o editar: chamar o modal editar, com o t√≠tulo em um input e o conte√∫do textarea. Quando o usu√°rio clicar no bot√£o que cont√©m o texto "Salva Altera√ß√µes", enviar os dados dos inputs para API, via m√©todo patch.
üü®       VII - Bot√£o excluir: chamar o modal de alerta, solicitando a confirma√ß√£o da a√ß√£o. Caso o usu√°rio confirme, enviar o id do post que o usu√°rio deseja excluir para a API, via m√©todo delete.
‚¨ú   7 - Desenvolver l√≥gica da NavBar
‚úÖ       I - Bot√£o Criar publica√ß√£o: Chamar modal com o formul√°rio contendo os campos necess√°rios para criar um post. Ao usu√°rio finalizar o preenchimento, enviar os dados para API, via m√©todo post.
‚¨ú       II - Criar modal do usu√°rio com bot√£o de logout